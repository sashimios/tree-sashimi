Applied-Upstream: 0.5.10.2+, 8e43729
From 8e43729547b57ab15842dab23215336a353b2ded Mon Sep 17 00:00:00 2001
From: Gerrit Pape <pape@smarden.org>
Date: Fri, 7 Sep 2018 10:34:13 +0200
Subject: [PATCH] eval: Report I/O error on stdout

ENOSPC as a result of an echo builting failing gives no diagnostic.
Just as other shells, dash sets $? to 1, but aside from terminating
the script, this does not inform the user what the problem is:

zsh:
    % echo foo > /dev/full
    echo: write error: no space left on device

bash:
    $ echo foo > /dev/full
    bash: echo: write error: No space left on device

dash:
    $ echo foo > /dev/full
    [nothing]

Print an error to stderr like the other shells.

Suggested by Roger Leigh.

Signed-off-by: Gerrit Pape <pape@smarden.org>
[reworded the patch description with information from the bug]
Signed-off-by: Andrej Shadura <andrew.shadura@collabora.co.uk>
Bug-Debian: http://bugs.debian.org/690473
Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
---
 src/eval.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/eval.c b/src/eval.c
index 6185db4..546ee1b 100644
--- a/src/eval.c
+++ b/src/eval.c
@@ -952,6 +952,8 @@ evalbltin(const struct builtincmd *cmd, int argc, char **argv, int flags)
 	else
 		status = (*cmd->builtin)(argc, argv);
 	flushall();
+	if (outerr(out1))
+		sh_warnx("%s: I/O error", commandname);
 	status |= outerr(out1);
 	exitstatus = status;
 cmddone:
-- 
2.19.1

