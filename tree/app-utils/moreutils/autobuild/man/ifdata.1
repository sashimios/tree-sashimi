.\" -*- coding: us-ascii -*-
.if \n(.g .ds T< \\FC
.if \n(.g .ds T> \\F[\n[.fam]]
.de URL
\\$2 \(la\\$1\(ra\\$3
..
.if \n(.g .mso www.tmac
.TH ifdata 1 2006-03-07 moreutils moreutils
.SH NAME
ifdata \- get network interface info without parsing ifconfig output
.SH SYNOPSIS
'nh
.fi
.ad l
\fBifdata\fR \kx
.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
'in \n(.iu+\nxu
[options] {\fIiface\fR}
'in \n(.iu-\nxu
.ad b
'hy
.SH DESCRIPTION
\fBifdata\fR can be used to check for
the existence of a network interface, or to get
information abut the interface, such as its IP
address. Unlike \fBifconfig\fR or
\fBip\fR, \fBifdata\fR
has simple to parse output that is designed to be
easily used by a shell script.
.SH OPTIONS
.TP 
\*(T<\fB\-h\fR\*(T>
Print out a help summary.
.TP 
\*(T<\fB\-e\fR\*(T>
Test to see if the interface exists,
exit nonzero if it does not.
.TP 
\*(T<\fB\-p\fR\*(T>
Prints out the whole configuration of
the interface.
.TP 
\*(T<\fB\-pe\fR\*(T>
Prints "yes" or "no" if the interface
exists or not.
.TP 
\*(T<\fB\-pa\fR\*(T>
Prints the IPv4 address of the
interface.
.TP 
\*(T<\fB\-pn\fR\*(T>
Prints the netmask of the
interface.
.TP 
\*(T<\fB\-pN\fR\*(T>
Prints the network address of the
interface.
.TP 
\*(T<\fB\-pb\fR\*(T>
Prints the broadcast address of the
interface.
.TP 
\*(T<\fB\-pm\fR\*(T>
Prints the MTU of the interface.
.PP
Following options are Linux only.
.TP 
\*(T<\fB\-ph\fR\*(T>
Prints the hardware address of the
interface.
.TP 
\*(T<\fB\-pf\fR\*(T>
Prints the flags of the 
interface.
.TP 
\*(T<\fB\-si\fR\*(T>
Prints out all the input statistics
of the interface.
.TP 
\*(T<\fB\-sip\fR\*(T>
Prints the number of input packets.
.TP 
\*(T<\fB\-sib\fR\*(T>
Prints the number of input bytes.
.TP 
\*(T<\fB\-sie\fR\*(T>
Prints the number of input errors.
.TP 
\*(T<\fB\-sid\fR\*(T>
Prints the number of dropped input
packets.
.TP 
\*(T<\fB\-sif\fR\*(T>
Prints the number of input fifo overruns.
.TP 
\*(T<\fB\-sic\fR\*(T>
Print the number of compressed input
packets.
.TP 
\*(T<\fB\-sim\fR\*(T>
Prints the number of input
multicast packets.
.TP 
\*(T<\fB\-so\fR\*(T>
Prints out all the output statistics
of the interface.
.TP 
\*(T<\fB\-sop\fR\*(T>
Prints the number of output packets.
.TP 
\*(T<\fB\-sob\fR\*(T>
Prints the number of output bytes.
.TP 
\*(T<\fB\-soe\fR\*(T>
Prints the number of output errors.
.TP 
\*(T<\fB\-sod\fR\*(T>
Prints the number of dropped
output packets.
.TP 
\*(T<\fB\-sof\fR\*(T>
Prints the number of output fifo overruns.
.TP 
\*(T<\fB\-sox\fR\*(T>
Print the number of output collisions.
.TP 
\*(T<\fB\-soc\fR\*(T>
Prints the number of output carrier
losses.
.TP 
\*(T<\fB\-som\fR\*(T>
Prints the number of output multicast
packets.
.TP 
\*(T<\fB\-bips\fR\*(T>
Prints the number of bytes of
incoming traffic measured in one second.
.TP 
\*(T<\fB\-bops\fR\*(T>
Prints the number of bytes of
outgoing traffic measured in one second.
.SH AUTHOR
Benjamin BAYART
