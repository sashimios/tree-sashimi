From: Guillem Jover <guillem@hadrons.org>
Date: Sat, 5 Jul 2008 17:50:58 +0300
Subject: [PATCH] Use external libx86 instead of embedded lrmi and x86emu

--- a/Makefile	2008-10-04 02:08:30.000000000 +0200
+++ b/Makefile	2009-01-06 14:12:26.000000000 +0100
@@ -1,6 +1,6 @@
 config_opt = $(shell if [ -e config.h -a -n "`egrep '^\#define[[:space:]]+$(1)([[:space:]]+|$$)' config.h 2>/dev/null`" ]; then echo true ; fi)
 
-.PHONY: clean install install_testvbe x86emu lrmi
+.PHONY: clean install install_testvbe
 
 INSTALL = install
 KDIR   ?= /lib/modules/$(shell uname -r)/source
@@ -12,19 +12,8 @@
 CFLAGS ?= -Wall -g -O2
 CFLAGS += -I$(KDIR)/include
 
-ifeq ($(call config_opt,CONFIG_X86EMU),true)
-	CFLAGS += -Ilibs/x86emu
-	LDFLAGS += -Llibs/x86emu
-	LDLIBS += -lx86emu
-	V86OBJS = v86_x86emu.o v86_mem.o v86_common.o 
-	V86LIB = x86emu
-else
-	CFLAGS += -Ilibs/lrmi-0.10
-	LDFLAGS += -Llibs/lrmi-0.10 -static -Wl,--section-start,vm86_ret=0x9000
-	LDLIBS += -llrmi
-	V86OBJS = v86_lrmi.o v86_common.o
-	V86LIB = lrmi
-endif
+LDLIBS += -lx86
+V86OBJS = v86_lrmi.o v86_common.o
 
 DEBUG_BUILD =
 DEBUG_INSTALL =
@@ -34,7 +23,7 @@
 	DEBUG_INSTALL += install_testvbe
 endif
 
-all: $(V86LIB) v86d $(DEBUG_BUILD)
+all: v86d $(DEBUG_BUILD)
 
 %.o: %.c v86.h
 	$(CC) $(CFLAGS) -c -o $@ $<
@@ -45,16 +34,8 @@
 testvbe: $(V86OBJS) $(V86LIB) testvbe.o
 	$(CC) $(LDFLAGS) $(V86OBJS) testvbe.o $(LDLIBS) -o $@
 
-x86emu:
-	$(MAKE) -w -C libs/x86emu
-
-lrmi:
-	$(MAKE) -e -w -C libs/lrmi-0.10 liblrmi.a
-
 clean:
 	rm -rf *.o v86d testvbe
-	$(MAKE) -w -C libs/lrmi-0.10 clean
-	$(MAKE) -w -C libs/x86emu clean
 
 distclean: clean
 	rm -rf config.h
diff --git a/README b/README
index 178c004..c1b02f8 100644
--- a/README
+++ b/README
@@ -38,9 +38,6 @@ software-emulated environment (x86emu) or a virtualized
 environment (vm86) supported by the CPU.  On other arches
 or 64-bit systems, the code is always run by x86emu.
 
-To choose the x86emu backend on a x86 system, run ./configure
---with-x86emu.
-
 4. Installation & Usage
 -----------------------
 To configure, build and install v86d with the default settings,
diff --git a/configure b/configure
index cbbd6b3..3a6b926 100755
--- a/configure
+++ b/configure
@@ -17,23 +17,6 @@ copt_debug_desc="Use additional debugging features"
 copt_debug_type="bool"
 copt_debug_def=n
 
-copt_x86emu=CONFIG_X86EMU
-copt_x86emu_desc="Use x86emu for BIOS calls"
-copt_x86emu_type="bool"
-copt_x86emu_def=auto
-copt_x86emu_test()
-{
-	local m=`uname -m`
-	if [ "$m" = "i686" -o "$m" = "i586" -o "$m" = "i486" -o "$m" = "i386" ]; then
-		echo "n";
-	elif [ "$m" = "x86_64" ]; then
-		echo "y";
-	else
-		echo "It looks like your architecture '$m' isn't supported by this version of v86d." >&2
-		exit 1
-	fi
-}
-
 options=`set | grep '^copt_' | sed -re 's/copt_([^_=]+)[_=].*/\1/' | uniq`
 
 write_conf()
diff --git a/v86_lrmi.c b/v86_lrmi.c
index 61f6bf5..ea5fafe 100644
--- a/v86_lrmi.c
+++ b/v86_lrmi.c
@@ -1,5 +1,5 @@
 #include <string.h>
-#include <lrmi.h>
+#include <libx86.h>
 #include "v86.h"
 
 /* Memory access functions */
