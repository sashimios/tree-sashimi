diff -Naur binutils-2.39/bfd/config.bfd binutils-2.39.r6/bfd/config.bfd
--- binutils-2.39/bfd/config.bfd	2022-07-08 02:46:47.000000000 -0700
+++ binutils-2.39.r6/bfd/config.bfd	2022-11-09 07:14:55.069302385 -0800
@@ -1490,6 +1490,11 @@
     want64=true
     ;;
 esac
+case "${targ}" in
+  mipsisa32r6* | mipsisa64r6*)
+    mips_default_r6=true
+    ;;
+esac
 
 case "${host64}${want64}" in
   *true*)
diff -Naur binutils-2.39/bfd/configure binutils-2.39.r6/bfd/configure
--- binutils-2.39/bfd/configure	2022-08-05 02:54:00.000000000 -0700
+++ binutils-2.39.r6/bfd/configure	2022-11-09 07:14:55.076302402 -0800
@@ -13292,6 +13292,7 @@
 	TDEFINES="$TDEFINES $targ_cflags"
     fi
 done
+test -n "${mips_default_r6}" && TDEFINES="$TDEFINES -DMIPS_DEFAULT_R6=1"
 
 
 # This processing still needs to be done if we're to decide properly whether
diff -Naur binutils-2.39/bfd/configure.ac binutils-2.39.r6/bfd/configure.ac
--- binutils-2.39/bfd/configure.ac	2022-08-01 00:12:32.000000000 -0700
+++ binutils-2.39.r6/bfd/configure.ac	2022-11-09 07:14:55.077302404 -0800
@@ -349,6 +349,7 @@
 	TDEFINES="$TDEFINES $targ_cflags"
     fi
 done
+test -n "${mips_default_r6}" && TDEFINES="$TDEFINES -DMIPS_DEFAULT_R6=1"
 AC_SUBST(TDEFINES)
 
 # This processing still needs to be done if we're to decide properly whether
diff -Naur binutils-2.39/bfd/elfxx-mips.c binutils-2.39.r6/bfd/elfxx-mips.c
--- binutils-2.39/bfd/elfxx-mips.c	2022-07-08 02:46:47.000000000 -0700
+++ binutils-2.39.r6/bfd/elfxx-mips.c	2022-11-09 07:14:55.081302414 -0800
@@ -12233,9 +12233,15 @@
     {
     default:
       if (ABI_N32_P (abfd) || ABI_64_P (abfd))
+#ifdef MIPS_DEFAULT_R6
+        val = E_MIPS_ARCH_64R6;
+      else
+        val = E_MIPS_ARCH_32R6;
+#else
         val = E_MIPS_ARCH_3;
       else
         val = E_MIPS_ARCH_1;
+#endif
       break;
 
     case bfd_mach_mips3000:
diff -Naur binutils-2.39/gas/config/tc-mips.c binutils-2.39.r6/gas/config/tc-mips.c
--- binutils-2.39/gas/config/tc-mips.c	2022-07-08 02:46:47.000000000 -0700
+++ binutils-2.39.r6/gas/config/tc-mips.c	2022-11-09 07:16:32.648643792 -0800
@@ -9082,7 +9082,7 @@
 		      || *r == BFD_RELOC_HI16_S
 		      || *r == BFD_RELOC_LO16
 		      || *r == BFD_RELOC_MIPS_GOT_OFST
-		      || (mips_opts.micromips
+		      || ((mips_opts.micromips || ISA_IS_R6 (mips_opts.isa))
 			  && (*r == BFD_RELOC_MIPS_16
 			      || *r == BFD_RELOC_MIPS_GOT16
 			      || *r == BFD_RELOC_MIPS_CALL16
@@ -20223,6 +20223,13 @@
 mips_parse_cpu (const char *option, const char *cpu_string)
 {
   const struct mips_cpu_info *p;
+#if MIPS_DEFAULT_R6
+  int default_isa32 = ISA_MIPS32R6;
+  int default_isa64 = ISA_MIPS64R6;
+#else
+  int default_isa32 = ISA_MIPS1;
+  int default_isa64 = ISA_MIPS3;
+#endif
 
   /* 'from-abi' selects the most compatible architecture for the given
      ABI: MIPS I for 32-bit ABIs and MIPS III for 64-bit ABIs.  For the
@@ -20237,18 +20244,18 @@
   if (strcasecmp (cpu_string, "from-abi") == 0)
     {
       if (ABI_NEEDS_32BIT_REGS (mips_abi))
-	return mips_cpu_info_from_isa (ISA_MIPS1);
+	return mips_cpu_info_from_isa (default_isa32);
 
       if (ABI_NEEDS_64BIT_REGS (mips_abi))
-	return mips_cpu_info_from_isa (ISA_MIPS3);
+	return mips_cpu_info_from_isa (default_isa64);
 
       if (file_mips_opts.gp >= 0)
 	return mips_cpu_info_from_isa (file_mips_opts.gp == 32
-				       ? ISA_MIPS1 : ISA_MIPS3);
+				       ? default_isa32 : default_isa64);
 
       return mips_cpu_info_from_isa (MIPS_DEFAULT_64BIT
-				     ? ISA_MIPS3
-				     : ISA_MIPS1);
+				     ? default_isa64
+				     : default_isa32);
     }
 
   /* 'default' has traditionally been a no-op.  Probably not very useful.  */
diff -Naur binutils-2.39/gas/config.in binutils-2.39.r6/gas/config.in
--- binutils-2.39/gas/config.in	2022-08-05 02:55:19.000000000 -0700
+++ binutils-2.39.r6/gas/config.in	2022-11-09 07:14:55.082302417 -0800
@@ -150,6 +150,9 @@
 /* Choose a default ABI for MIPS targets. */
 #undef MIPS_DEFAULT_ABI
 
+/* Generate code for MIPSr6 by default on MIPS targets. */
+#undef MIPS_DEFAULT_R6
+
 /* Define value for nds32_arch_name */
 #undef NDS32_DEFAULT_ARCH_NAME
 
diff -Naur binutils-2.39/gas/configure binutils-2.39.r6/gas/configure
--- binutils-2.39/gas/configure	2022-08-05 02:55:17.000000000 -0700
+++ binutils-2.39.r6/gas/configure	2022-11-09 07:14:55.097302453 -0800
@@ -12187,6 +12187,14 @@
 	    mips_default_abi=NO_ABI
 	    ;;
 	esac
+	case ${target} in
+	  mipsisa32r6* | mipsisa64r6*)
+	    mips_default_r6=1
+	    ;;
+	  *)
+	    mips_default_r6=0
+	    ;;
+	esac
 
 cat >>confdefs.h <<_ACEOF
 #define MIPS_CPU_STRING_DEFAULT "$mips_cpu"
@@ -12207,6 +12215,11 @@
 #define MIPS_DEFAULT_ABI $mips_default_abi
 _ACEOF
 
+
+cat >>confdefs.h <<_ACEOF
+#define MIPS_DEFAULT_R6 $mips_default_r6
+_ACEOF
+
 	;;
     esac
 
diff -Naur binutils-2.39/gas/configure.ac binutils-2.39.r6/gas/configure.ac
--- binutils-2.39/gas/configure.ac	2022-07-08 02:46:47.000000000 -0700
+++ binutils-2.39.r6/gas/configure.ac	2022-11-09 07:14:55.098302455 -0800
@@ -398,6 +398,14 @@
 	    mips_default_abi=NO_ABI
 	    ;;
 	esac
+	case ${target} in
+	  mipsisa32r6* | mipsisa64r6*)
+	    mips_default_r6=1
+	    ;;
+	  *)
+	    mips_default_r6=0
+	    ;;
+	esac
 	AC_DEFINE_UNQUOTED(MIPS_CPU_STRING_DEFAULT, "$mips_cpu",
 			   [Default CPU for MIPS targets. ])
 	AC_DEFINE_UNQUOTED(USE_E_MIPS_ABI_O32, $use_e_mips_abi_o32,
@@ -406,6 +414,8 @@
 			   [Generate 64-bit code by default on MIPS targets. ])
 	AC_DEFINE_UNQUOTED(MIPS_DEFAULT_ABI, $mips_default_abi,
 			   [Choose a default ABI for MIPS targets. ])
+	AC_DEFINE_UNQUOTED(MIPS_DEFAULT_R6, $mips_default_r6,
+			   [Choose default ISA as r6 by default. ])
 	;;
     esac
 
